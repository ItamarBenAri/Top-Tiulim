/**
 * Itineraries Slice
 * ------------------
 * This Redux slice manages the state for itineraries in the application, enabling the addition
 * of new itinerary entries to the state.
 * 
 * Imports:
 * - `PayloadAction` and `createSlice` from Redux Toolkit: Used for defining the slice and action payload type.
 * - `ItineraryModel`: Represents individual itineraries with details about daily plans and activities.
 */

import { PayloadAction, createSlice } from "@reduxjs/toolkit";
import { ItineraryModel } from "../Models/ItineraryModel";

/**
 * addItinerary Function
 * ----------------------
 * Reducer function that adds a new `ItineraryModel` item to the current itineraries state.
 * 
 * Parameters:
 * - `currentState`: The current state array of itineraries, each an instance of `ItineraryModel`.
 * - `action`: Redux action containing the payload, which is a new `ItineraryModel` to be added to the state.
 * 
 * Returns:
 * - A new array with the existing itineraries and the new itinerary from the action payload appended.
 */
function addItinerary(currentState: ItineraryModel[], action: PayloadAction<ItineraryModel>): ItineraryModel[] {
    return [...currentState, action.payload];
}

/**
 * itinerariesSlice
 * ------------------
 * Creates a Redux slice to manage itineraries within the application state.
 * 
 * Properties:
 * - `name`: Specifies the slice name as "itineraries".
 * - `initialState`: Sets the initial state as an empty array, indicating no itineraries initially.
 * - `reducers`: Defines reducer functions for the slice, currently including only `addItinerary`.
 */
const itinerariesSlice = createSlice({
    name: "itineraries",           // Slice name for managing itineraries state
    initialState: [],              // Initial state set to an empty array
    reducers: { addItinerary }     // Reducers in the slice, including `addItinerary` to add new itineraries
});

/**
 * itinerariesActionCreators
 * ---------------------------
 * Exports action creators generated by Redux Toolkit for the itineraries slice.
 */
export const itinerariesActionCreators = itinerariesSlice.actions;

/**
 * itinerariesReducersContainer
 * -----------------------------
 * Exports the reducer function for this slice, allowing it to be added to the Redux store.
 */
export const itinerariesReducersContainer = itinerariesSlice.reducer;
